name: Publish project
author: matzehecht
description: Publish project
inputs:
  slug:
    description: 'slug'
    default: ''
    required: true
  version:
    description: 'version'
    default: ''
    required: true
  page:
    description: 'page'
    default: 'README.md'
    required: true
  assets:
    description: 'assets'
    default: ''
    required: false
runs:
  using: 'composite'
  steps:
    - name: run
      shell: bash
      run: |
        # Get information
        title=$(sed -rn '1s/^#\s(.*)$/\1/p' ${{ inputs.page }})
        date=$(date +%Y-%m-%dT%H:%M:%S%:z)
        fileversion=$(echo "${{ inputs.version }}" | sed 's/\./-/g')
        version="${{ inputs.version }}"
        
        
        # create front matters
        echo "---" > fm.md
        echo "title: $title" >> fm.md
        echo "date: $date" >> fm.md
        echo "draft: false" >> fm.md
        echo "toc: false" >> fm.md
        echo "menu:" >> fm.md
        echo "  main:" >> fm.md
        echo "    name: latest" >> fm.md
        echo "    title: latest" >> fm.md
        echo "    parent: ${{ inputs.slug }}" >> fm.md
        echo "tags:" >> fm.md
        echo "  - projects" >> fm.md
        echo "  - ${{ inputs.slug }}" >> fm.md
        echo "slug: latest" >> fm.md
        echo "type: project" >> fm.md
        echo "---" >> fm.md
        echo "" >> fm.md
        echo "---" > subfm.md
        echo "title: $title - $version" >> subfm.md
        echo "date: $date" >> subfm.md
        echo "draft: false" >> subfm.md
        echo "toc: false" >> subfm.md
        echo "menu:" >> subfm.md
        echo "  main:" >> subfm.md
        echo "    name: $version" >> subfm.md
        echo "    title: $version" >> subfm.md
        echo "    parent: ${{ inputs.slug }}" >> subfm.md
        echo "tags:" >> subfm.md
        echo "  - projects" >> subfm.md
        echo "  - ${{ inputs.slug }}" >> subfm.md
        echo "slug: $version" >> subfm.md
        echo "type: project" >> subfm.md
        echo "---" >> subfm.md
        echo "" >> subfm.md
        
        
        # Insert assets
        ## Split string in array
        assetslist="${{ inputs.assets }}"
        assets=(${assetslist//,/ })
        
        for i in "${!assets[@]}"; do
          sed -rin "s/^(.*)\(.*\)<\!-- #ASSET#$i -->(.*)$/\1\(downloads\/${fileversion}-${assets[$i]}\)\2/" ${{ inputs.page }}
        done
        
        
        # Copy stuff
        ## Split string in array
        assetslist="${{ inputs.assets }}"
        assets=(${assetslist//,/ })
        
        folderpath="hechtspace/content/projects/${{ inputs.slug }}"
        
        for asset in "${assets[@]}"; do
          cp -f $asset "$folderpath/downloads/${fileversion}-$asset"
        done
        
        cp -f fm.md "$folderpath/latests.md"
        sed -r '1s/^#\s(.*)$//' ${{ inputs.page }} >> "$folderpath/latest.md"
        cp -f subfm.md "$folderpath/${fileversion}.md"
        sed -r '1s/^#\s(.*)$//' ${{ inputs.page }} >> "$folderpath/${fileversion}.md"
        
        
        # Release
        cd hechtspace
        git add .
        git config user.email "dev@hecht.space"
        git config user.name "${{ inputs.slug }} ReleaseBot"
        git commit -m "release ${{ inputs.slug }} version ${version}"
        git push
        